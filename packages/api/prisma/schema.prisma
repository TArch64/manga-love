generator client {
  provider = "prisma-client-js"
  output = "../src/prisma/client"
}

datasource db {
  provider = "postgresql"
  url = env("API_DATABASE_URL")
}

model DatabaseUser {
    id             String @id @default(uuid())
    username       String @db.VarChar(200) @unique
    email          String @db.VarChar(200) @unique
    password       String @db.VarChar(200)
    passwordResets DatabasePasswordReset[]
}

model DatabasePasswordReset {
    id        String       @id @default(uuid())
    email     String       @db.VarChar(200)
    code      String       @db.VarChar(200) @unique
    createdAt DateTime     @default(now())
    userId    String
    user      DatabaseUser @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model DatabaseManga {
    id           String              @id @default(uuid())
    source       DatabaseMangaSource
    sourceId     String              @db.VarChar(200)
    createdAt    DateTime            @default(now())
    originalName String              @db.VarChar(200)
    uaName       String?             @db.VarChar(200)
    description  String
    type         DatabaseMangaType
    releaseDate  DateTime?           @db.Date
    finishDate   DateTime?           @db.Date
    posters      DatabaseImage[]

    @@unique([source, sourceId], name: "sourceIdentifier")
}

enum DatabaseMangaSource {
    KITSU
}

enum DatabaseMangaType {
    MANGA
    MANHUA
    MANHWA
}

model DatabaseImage {
    id                   String         @id @default(uuid())
    originalSrc          String
    originalAspectRatio  Float
    targetId             String
    targetManga          DatabaseManga? @relation(fields: [targetId], references: [id], onDelete: Cascade)
}
