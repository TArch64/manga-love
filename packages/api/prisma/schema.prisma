generator client {
  provider = "prisma-client-js"
  output = "../src/prisma/client"
}

datasource db {
  provider = "postgresql"
  url = env("API_DATABASE_URL")
}

model DatabaseUser {
    id       String @id @default(uuid())
    email    String @db.VarChar(200) @unique
    password String @db.VarChar(200)
}

model DatabaseManga {
    id           String              @id @default(uuid())
    source       DatabaseMangaSource
    sourceId     String              @db.VarChar(200)
    createdAt    DateTime            @default(now())
    originalName String              @db.VarChar(200)
    uaName       String?             @db.VarChar(200)
    description  String
    type         DatabaseMangaType
    releaseDate  DateTime?           @db.Date
    finishDate   DateTime?           @db.Date
    posterEdgeId String
    posterEdge   DatabaseImageEdge   @relation(fields: [posterEdgeId], references: [id], onDelete: Cascade)

    @@unique([source, sourceId], name: "sourceIdentifier")
}

enum DatabaseMangaSource {
    KITSU
}

enum DatabaseMangaType {
    MANGA
    MANHUA
    MANHWA
}

model DatabaseImage {
    id                   String             @id @default(uuid())
    originalSrc          String
    originalAspectRatio  Float
    edgeId               String
    edge                 DatabaseImageEdge  @relation(fields: [edgeId], references: [id], onDelete: Cascade)
}

enum DatabaseImageEdgeTarget {
    MANGA
}

model DatabaseImageEdge {
    id          String                  @id @default(uuid())
    images      DatabaseImage[]
    type        DatabaseImageEdgeTarget
    targetId    String
    targetManga DatabaseManga?

    @@unique([type, targetId], name: "imageEdgeIdentifier")
}
