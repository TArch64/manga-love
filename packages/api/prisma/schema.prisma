generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("API_DATABASE_URL")
}

model DatabaseUser {
    id             String                  @id @default(uuid())
    username       String                  @db.VarChar(200) @unique
    email          String                  @db.VarChar(200) @unique
    emailConfirmed Boolean                 @default(false)
    password       String                  @db.VarChar(200)
    actions        DatabaseUserAction[]
    avatarId       String                  @unique
    avatar         DatabaseImage           @relation(fields: [avatarId], references: [id], onDelete: Cascade)
    libraryFolders DatabaseLibraryFolder[]
}

model DatabaseUserAction {
    id        String                 @id @default(uuid())
    code      String                 @db.VarChar(200) @unique @default(uuid())
    type      DatabaseUserActionType
    createdAt DateTime               @default(now())
    userId    String
    user      DatabaseUser           @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum DatabaseUserActionType {
    RESET_PASSWORD
    EMAIL_VERIFICATION
}

model DatabaseImage {
    id               String         @id @default(uuid())
    originalSrc      String
    originalWidth    Int
    originalHeight   Int
    targetId         String?
    targetUserAvatar DatabaseUser?
}

model DatabaseLibraryFolder {
    id     String       @id @default(uuid())
    name   String       @db.VarChar(200)
    userId String
    user   DatabaseUser @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([name, userId], name: "libraryFolderName")
    @@unique([id, userId], name: "libraryFolderUser")
}
